@page "/login"
@using System.Net
@using System.ComponentModel.DataAnnotations
@using Blazored.LocalStorage
@using MextFullStackSaas.Application.Common.Models
@using MextFullStackSaas.Application.Features.UserAuth.Commands.Login
@using MextFullStackSaas.WasmClientt.Services
@using MextFullstackSaaS.Application.Common.Models
@using MextFullstackSaas.Domain.Common
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient HttpClient
@inject IToasterService ToasterService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<section class="from-[#FC354C] to-[#0072ff] min-h-screen bg-gradient-to-r py-10 sm:py-16 lg:py-24">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <div class="mx-auto max-w-2xl text-center">
            <h2 class="text-3xl font-bold leading-tight text-white sm:text-4xl lg:text-5xl">Tekrar Hoş Geldiniz!</h2>
            <p class="mx-auto mt-4 max-w-xl text-base leading-relaxed text-gray-200">Hesabınıza giriş yapın</p>
        </div>

        <div class="relative mx-auto mt-8 max-w-md md:mt-16">
            <div class="overflow-hidden rounded-md bg-white shadow-md">
                <div class="px-4 py-6 sm:px-8 sm:py-7">
                    <EditForm Model="@command" OnSubmit="HandleSubmit" FormName="loginform">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="mb-1 text-red-500" />
                        <ErrorList Errors="errors"/>
                        <div class="space-y-5">
                            <div>
                                <label class="text-base font-medium text-gray-900"> E-posta Adresi </label>
                                <div class="relative mt-2.5 text-gray-400 focus-within:text-gray-600">
                                    <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                                        <!-- E-posta İkonu SVG -->
                                    </div>
                                    <div>
                                        <InputText type="email" @bind-Value="command.Email" placeholder="E-posta adresinizi girin" class="block w-full rounded-md border border-gray-200 bg-white py-4 pl-10 pr-4 text-black placeholder-gray-500 caret-blue-600 transition-all duration-200 focus:border-blue-600 focus:outline-none" />
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div class="flex items-center justify-between">
                                    <label for="" class="text-base font-medium text-gray-900"> Şifre </label>
                                    <a @onclick="HandleForgotPassword" class="cursor-pointer text-sm font-medium text-indigo-500 transition-all duration-200 hover:text-indigo-600 hover:underline focus:text-indigo-600"> Şifrenizi mi unuttunuz? </a>
                                </div>
                                <div class="relative mt-2.5 text-gray-400 focus-within:text-gray-600">
                                    <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                                        <!-- Şifre İkonu SVG -->
                                    </div>
                                    <InputText @bind-Value="command.Password" type="password" placeholder="Şifrenizi girin" class="block w-full rounded-md border border-gray-200 bg-white py-4 pl-10 pr-4 text-black placeholder-gray-500 caret-blue-600 transition-all duration-200 focus:border-blue-600 focus:outline-none" />
                                </div>
                            </div>
                            <div>
                                <button type="submit" class="inline-flex w-full items-center justify-center rounded-md bg-gradient-to-r from-cyan-400 to-pink-600 px-4 py-4 text-base font-semibold text-white transition-all duration-200 hover:opacity-90 focus:outline-none">Giriş Yap</button>
                            </div>
                            <div>
                                <button @onclick="HandleGoogleLogin" class="inline-flex w-full items-center justify-center rounded-md bg-gray-900 px-4 py-4 text-base font-semibold text-white transition-all duration-200 hover:opacity-90 focus:outline-none">
                                    <svg class="mr-2 h-5 w-5" aria-hidden="true" focusable="false" data-prefix="fab" data-icon="google" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 488 512"><path fill="currentColor" d="M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z"></path></svg>
                                    Google ile giriş yap
                                </button>
                            </div>
                            <div class="text-center">
                                <p @onclick="HandleCreateAccount" class="cursor-pointer text-base text-gray-600">Hesabınız yok mu? <a class="font-medium text-indigo-500 transition-all duration-200 hover:text-indigo-600 hover:underline">Ücretsiz hesap oluşturun</a></p>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private UserAuthLoginCommand command = new();
    private bool isLoading = false;
    private List<ErrorDto> errors = new List<ErrorDto>();

    private async Task HandleSubmit()
    {
        try
        {
            isLoading = true;

            var response = await HttpClient.PostAsJsonAsync("UsersAuth/login", command);

            if (response.IsSuccessStatusCode)
            {
                var responseDto = await response.Content.ReadFromJsonAsync<ResponseDto<JwtDto>>();
                await LocalStorage.SetItemAsync<JwtDto>("cto", responseDto.Data);
                await AuthStateProvider.GetAuthenticationStateAsync();

                ToasterService.ShowSuccess(responseDto.Message);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                var responseDto = await response.Content.ReadFromJsonAsync<ResponseDto<JwtDto>>();
                errors = responseDto.Errors;
                ToasterService.ShowWarning(responseDto.Message);
            }
        }
        catch (Exception e)
        {
            ToasterService.ShowError(e.Message);
            isLoading = false;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleGoogleLogin()
    {
        // Google ile giriş yapma işlemini burada gerçekleştirin
    }

    private async Task HandleForgotPassword()
    {
        // Şifremi unuttum işlemini burada gerçekleştirin
    }

    private async Task HandleCreateAccount()
    {
        // Ücretsiz hesap oluşturma işlemini burada gerçekleştirin
    }

    internal class LoginModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [MinLength(6)]
        public string Password { get; set; }
    }
}
